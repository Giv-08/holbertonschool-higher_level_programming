from 2-matrix_divided import matrix_divided

The ``matrix_divided`` module

Using ``matrix_divided``

First, import ``matrix_divided`` from the ``2-matrix_divided`` file:

    >>> matrix_divided = __import__('2-matrix-divided').matrix_divided

Examples:
---------
Add a list of integers with an integer as div:

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> matrix_divided(matrix, 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Add a list of integers with a float as div:

    >>> matrix = [
    ...     [2.2, 4.4, 6.6],
    ...     [8.8, 10.2, -12.2]
    ... ]
    >>> matrix_divided(matrix, 2)
    [[1.1, 2.2, 3.3], [4.4, 5.1, -6.1]]

Floats and integers can be combined:

    >>> matrix = [
    ...         [2.2, 4, -6],
    ...         [8, 10.2, 12.2]
    ... ]
    >>> matrix_divided(matrix, 2)
    [[1.1, 2.0, -3.0], [4.0, 5.1, 6.1]]

Invalid Matrix:
----------------------

Empty matrix:

    >>> matrix = [[]]
    >>> matrix_divided(matrix, 5)
    [[]]

    >>> matrix = None
    >>> matrix_divided(matrix, 5)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Add a list of integers with incorrect argument types:

    >>> matrix = [
    ...     [2, 4, 6, 8],
    ...     [10, 12, 14, 16]
    ... ]
    >>> matrix_divided(matrix, "3")
    Traceback (most recent call last):
    ...
    TypeError: div must be a number

Each row of the matrix must be of the same size:
In case this condition is not met, a TypeError is raised:

    >>> matrix = [
    ...     [2, 4, 6, 14],
    ...     [8, 10.2, 12.2]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

An empty list will raise a TypeError

    >>> matrix = [[]]

    >>> matrix_divided(matrix, 2)
    [[]]

    >>> matrix = None

    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix has mixed data types

    >>> matrix = [
    ...         [2.2, "hello", -6],
    ...         [8, 10.2, "school"]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Each row of the matrix must be of the same size.

    >>> matrix = [
    ...         [2, 4, 6, 14],
    ...         [8, 10.2, 12.2]
    ... ]
    >>> matrix_divided(matrix, 2)
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Invalid division:
----------------

Add 0 as div:

    >>> matrix = [
    ...     [2, 4, 6, 8],
    ...     [10, 12, 14, 16]
    ... ]
    >>> matrix_divided(matrix, 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Add string as div:

    >>> matrix = [
    ...     [2, 4, 6, 8],
    ...     [10, 12, 14, 16]
    ... ]
    >>> matrix_divided(matrix, 'this is not a number')
    Traceback (most recent call last):
    ...
    TypeError: div must be a number
